\hypertarget{arguments_8hpp}{}\doxysection{include/fmatio/details/arguments.hpp File Reference}
\label{arguments_8hpp}\index{include/fmatio/details/arguments.hpp@{include/fmatio/details/arguments.hpp}}
{\ttfamily \#include $<$fmatio/core.\+hpp$>$}\newline
{\ttfamily \#include $<$fmatio/types.\+hpp$>$}\newline
{\ttfamily \#include $<$fmatio/details/type\+\_\+traits.\+hpp$>$}\newline
{\ttfamily \#include $<$fmatio/details/writers.\+hpp$>$}\newline
{\ttfamily \#include $<$initializer\+\_\+list$>$}\newline
{\ttfamily \#include \char`\"{}./arguments.\+inl\char`\"{}}\newline
Include dependency graph for arguments.\+hpp\+:
% FIG 0
This graph shows which files directly or indirectly include this file\+:
% FIG 1
\doxysubsection*{Classes}
\begin{DoxyCompactItemize}
\item 
struct \mbox{\hyperlink{structfmatio_1_1details_1_1TypeOf}{fmatio\+::details\+::\+Type\+Of$<$ T $>$}}
\begin{DoxyCompactList}\small\item\em Format argument type definition for unknown type. \end{DoxyCompactList}\item 
struct \mbox{\hyperlink{structfmatio_1_1details_1_1TypeOf_3_01bool_01_4}{fmatio\+::details\+::\+Type\+Of$<$ bool $>$}}
\begin{DoxyCompactList}\small\item\em Format argument type definition for boolean type. \end{DoxyCompactList}\item 
struct \mbox{\hyperlink{structfmatio_1_1details_1_1TypeOf_3_01char_01_4}{fmatio\+::details\+::\+Type\+Of$<$ char $>$}}
\begin{DoxyCompactList}\small\item\em Format argument type definition for char type. \end{DoxyCompactList}\item 
struct \mbox{\hyperlink{structfmatio_1_1details_1_1TypeOf_3_01int8_01_4}{fmatio\+::details\+::\+Type\+Of$<$ int8 $>$}}
\begin{DoxyCompactList}\small\item\em Format argument type definition for signed int8 type. \end{DoxyCompactList}\item 
struct \mbox{\hyperlink{structfmatio_1_1details_1_1TypeOf_3_01uint8_01_4}{fmatio\+::details\+::\+Type\+Of$<$ uint8 $>$}}
\begin{DoxyCompactList}\small\item\em Format argument type definition for unsigned int8 type. \end{DoxyCompactList}\item 
struct \mbox{\hyperlink{structfmatio_1_1details_1_1TypeOf_3_01int16_01_4}{fmatio\+::details\+::\+Type\+Of$<$ int16 $>$}}
\begin{DoxyCompactList}\small\item\em Format argument type definition for signed int16 type. \end{DoxyCompactList}\item 
struct \mbox{\hyperlink{structfmatio_1_1details_1_1TypeOf_3_01uint16_01_4}{fmatio\+::details\+::\+Type\+Of$<$ uint16 $>$}}
\begin{DoxyCompactList}\small\item\em Format argument type definition for unsigned int16 type. \end{DoxyCompactList}\item 
struct \mbox{\hyperlink{structfmatio_1_1details_1_1TypeOf_3_01int32_01_4}{fmatio\+::details\+::\+Type\+Of$<$ int32 $>$}}
\begin{DoxyCompactList}\small\item\em Format argument type definition for signed int32 type. \end{DoxyCompactList}\item 
struct \mbox{\hyperlink{structfmatio_1_1details_1_1TypeOf_3_01uint32_01_4}{fmatio\+::details\+::\+Type\+Of$<$ uint32 $>$}}
\begin{DoxyCompactList}\small\item\em Format argument type definition for unsigned int32 type. \end{DoxyCompactList}\item 
struct \mbox{\hyperlink{structfmatio_1_1details_1_1TypeOf_3_01int64_01_4}{fmatio\+::details\+::\+Type\+Of$<$ int64 $>$}}
\begin{DoxyCompactList}\small\item\em Format argument type definition for signed int64 type. \end{DoxyCompactList}\item 
struct \mbox{\hyperlink{structfmatio_1_1details_1_1TypeOf_3_01uint64_01_4}{fmatio\+::details\+::\+Type\+Of$<$ uint64 $>$}}
\begin{DoxyCompactList}\small\item\em Format argument type definition for unsigned int64 type. \end{DoxyCompactList}\item 
struct \mbox{\hyperlink{structfmatio_1_1details_1_1TypeOf_3_01float_01_4}{fmatio\+::details\+::\+Type\+Of$<$ float $>$}}
\begin{DoxyCompactList}\small\item\em Format argument type definition for float type. \end{DoxyCompactList}\item 
struct \mbox{\hyperlink{structfmatio_1_1details_1_1TypeOf_3_01double_01_4}{fmatio\+::details\+::\+Type\+Of$<$ double $>$}}
\begin{DoxyCompactList}\small\item\em Format argument type definition for double type. \end{DoxyCompactList}\item 
struct \mbox{\hyperlink{structfmatio_1_1details_1_1TypeOf_3_01char_01_5_01_4}{fmatio\+::details\+::\+Type\+Of$<$ char $\ast$ $>$}}
\begin{DoxyCompactList}\small\item\em Format argument type definition for char string type. \end{DoxyCompactList}\item 
struct \mbox{\hyperlink{structfmatio_1_1details_1_1TypeOf_3_01signed_01char_01_5_01_4}{fmatio\+::details\+::\+Type\+Of$<$ signed char $\ast$ $>$}}
\begin{DoxyCompactList}\small\item\em Format argument type definition for signed char string type. \end{DoxyCompactList}\item 
struct \mbox{\hyperlink{structfmatio_1_1details_1_1TypeOf_3_01unsigned_01char_01_5_01_4}{fmatio\+::details\+::\+Type\+Of$<$ unsigned char $\ast$ $>$}}
\begin{DoxyCompactList}\small\item\em Format argument type definition for unsigned char string type. \end{DoxyCompactList}\item 
struct \mbox{\hyperlink{structfmatio_1_1details_1_1TypeOf_3_01const_01char_01_5_01_4}{fmatio\+::details\+::\+Type\+Of$<$ const char $\ast$ $>$}}
\begin{DoxyCompactList}\small\item\em Format argument type definition for const char string type. \end{DoxyCompactList}\item 
struct \mbox{\hyperlink{structfmatio_1_1details_1_1TypeOf_3_01const_01signed_01char_01_5_01_4}{fmatio\+::details\+::\+Type\+Of$<$ const signed char $\ast$ $>$}}
\begin{DoxyCompactList}\small\item\em Format argument type definition for const signed char string type. \end{DoxyCompactList}\item 
struct \mbox{\hyperlink{structfmatio_1_1details_1_1TypeOf_3_01const_01unsigned_01char_01_5_01_4}{fmatio\+::details\+::\+Type\+Of$<$ const unsigned char $\ast$ $>$}}
\begin{DoxyCompactList}\small\item\em Format argument type definition for const unsigned char string type. \end{DoxyCompactList}\item 
struct \mbox{\hyperlink{structfmatio_1_1details_1_1TypeOf_3_01null_01_4}{fmatio\+::details\+::\+Type\+Of$<$ null $>$}}
\begin{DoxyCompactList}\small\item\em Format argument type definition for nullptr type. \end{DoxyCompactList}\item 
class \mbox{\hyperlink{classfmatio_1_1details_1_1BasicFormatArgument}{fmatio\+::details\+::\+Basic\+Format\+Argument$<$ Char $>$}}
\begin{DoxyCompactList}\small\item\em A format argument, that holds it\textquotesingle{}s type and pointer to it\textquotesingle{}s value address in memory. \end{DoxyCompactList}\item 
class \mbox{\hyperlink{classfmatio_1_1details_1_1BasicFormatArgumentsList}{fmatio\+::details\+::\+Basic\+Format\+Arguments\+List$<$ Char $>$}}
\begin{DoxyCompactList}\small\item\em A list to store format arguments. \end{DoxyCompactList}\end{DoxyCompactItemize}
\doxysubsection*{Enumerations}
\begin{DoxyCompactItemize}
\item 
\mbox{\Hypertarget{arguments_8hpp_a6cfdfa75396bdb62c0cf576f768b23b0}\label{arguments_8hpp_a6cfdfa75396bdb62c0cf576f768b23b0}} 
enum class \mbox{\hyperlink{arguments_8hpp_a6cfdfa75396bdb62c0cf576f768b23b0}{fmatio\+::details\+::\+Format\+Argument\+Type}} \+: uint8 \{ \newline
{\bfseries Unknown}
, {\bfseries Bool}
, {\bfseries Char}
, {\bfseries Signed\+Int8}
, \newline
{\bfseries Unsigned\+Int8}
, {\bfseries Signed\+Int16}
, {\bfseries Unsigned\+Int16}
, {\bfseries Signed\+Int32}
, \newline
{\bfseries Unsigned\+Int32}
, {\bfseries Signed\+Int64}
, {\bfseries Unsigned\+Int64}
, {\bfseries Float}
, \newline
{\bfseries Double}
, {\bfseries Char\+String}
, {\bfseries Null\+Pointer}
 \}
\begin{DoxyCompactList}\small\item\em Defines types of format arguments. \end{DoxyCompactList}\end{DoxyCompactItemize}
\doxysubsection*{Functions}
\begin{DoxyCompactItemize}
\item 
{\footnotesize template$<$typename Char , typename Value $>$ }\\FMATIO\+\_\+\+INLINE Basic\+Format\+Argument$<$ Char $>$ \mbox{\hyperlink{arguments_8hpp_a52471ce86be0348c299952d666aeacdd}{fmatio\+::details\+::make\+Format\+Argument}} (const Value \&value) FMATIO\+\_\+\+NOEXCEPT
\begin{DoxyCompactList}\small\item\em Make a format argument with provided value. \end{DoxyCompactList}\end{DoxyCompactItemize}


\doxysubsection{Detailed Description}
\begin{DoxyAuthor}{Author}
Joris Baranauskas (jorisb)
\end{DoxyAuthor}
Defines classes and utilitites for formatting arguments.

\begin{DoxyCopyright}{Copyright}
Â© 2022-\/2023 by Joris Baranauskas
\end{DoxyCopyright}
This file is distributed under the GNU GENERAL PUBLIC LICENSE, Version 3. You should have received a copy of the license along with this project. If not, see \href{https://www.gnu.org/licenses/}{\texttt{ https\+://www.\+gnu.\+org/licenses/}}. 

\doxysubsection{Function Documentation}
\mbox{\Hypertarget{arguments_8hpp_a52471ce86be0348c299952d666aeacdd}\label{arguments_8hpp_a52471ce86be0348c299952d666aeacdd}} 
\index{arguments.hpp@{arguments.hpp}!makeFormatArgument@{makeFormatArgument}}
\index{makeFormatArgument@{makeFormatArgument}!arguments.hpp@{arguments.hpp}}
\doxysubsubsection{\texorpdfstring{makeFormatArgument()}{makeFormatArgument()}}
{\footnotesize\ttfamily template$<$typename Char , typename Value $>$ \\
FMATIO\+\_\+\+INLINE Basic\+Format\+Argument$<$ Char $>$ fmatio\+::details\+::make\+Format\+Argument (\begin{DoxyParamCaption}\item[{const Value \&}]{value }\end{DoxyParamCaption})}



Make a format argument with provided value. 


\begin{DoxyTemplParams}{Template Parameters}
{\em Char} & Char type for the writer.\\
\hline
{\em Value} & Value type.\\
\hline
\end{DoxyTemplParams}

\begin{DoxyParams}[1]{Parameters}
\mbox{\texttt{ in}}  & {\em value} & Value of the format argument.\\
\hline
\end{DoxyParams}
\begin{DoxyReturn}{Returns}
Basic\+Format\+Argument$<$\+Char$>$ -\/ Format argument. 
\end{DoxyReturn}


Definition at line 142 of file arguments.\+inl.


\begin{DoxyCode}{0}
\DoxyCodeLine{143         \{}
\DoxyCodeLine{144             \mbox{\hyperlink{arguments_8hpp_a6cfdfa75396bdb62c0cf576f768b23b0}{FormatArgumentType}} type = TypeOf<Value>::value;}
\DoxyCodeLine{145 }
\DoxyCodeLine{146             \textcolor{keywordflow}{if} (type != FormatArgumentType::Unknown)}
\DoxyCodeLine{147                 \textcolor{keywordflow}{return} BasicFormatArgument<Char>(type, \&value);}
\DoxyCodeLine{148 }
\DoxyCodeLine{149             FMATIO\_ASSERT(\textcolor{keyword}{false}, \textcolor{stringliteral}{"{}Provided argument type is not supported!"{}});}
\DoxyCodeLine{150             \textcolor{keywordflow}{return} BasicFormatArgument<Char>();}
\DoxyCodeLine{151         \}}

\end{DoxyCode}
